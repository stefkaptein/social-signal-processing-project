#!/usr/bin/perl

# start a user off in topic segmenter. Simply creates a newdirectory
# for the user in CVS to make checking in simpler.
# Assumes you are CVS logged in!!

# Change these for non-local (to Edinburgh) setup

$CVS = "/usr/bin/cvs";
$CVSPATH="cvs.inf.ed.ac.uk:/disk/cvs/ami";
$NXT="/group/ltg/projects/NITE/nxt";
$SIGNALS="/group/project/ami1/ICSI/audiomix";
$base="Data/ICSI/NXT-format";
$shortbase="ICSI/NXT-format";
$toolbase="Tools/NXTtools";
$main="$base/Main";
$meta="$base/Main/ICSI-metadata.xml";
$topics="$base/Contributions/TopicSegmentation";
$shorttopics="$shortbase/Contributions/TopicSegmentation";
$topictool="$toolbase/topic.sh";
$CP = "/bin/cp";
$LN = "/bin/ln";
$metafragment="            <!-- topic codings from the NXT topic Segmenter -->
            <coding-file name=\"topic\">
                <structural-layer name=\"topic-layer\" recursive-points-to=\"segment-layer\">
                    <code name=\"topic\">
                        <attribute name=\"type\" value-type=\"string\"/>
                    </code>
                </structural-layer>
            </coding-file>
";

sub usage {
    print STDERR "Usage: starttopic -u <cvs-username> -d <checkout-directory>\n";
    exit 1;
}


## Start Here
$outdir=".";

# Get the args
while (@ARGV) {
#    print @ARGV;
    $arg = shift(@ARGV);
    if ($arg eq "-u") {
	$username = shift(@ARGV);
        if (!$username) { &usage; }
    } elsif ($arg eq "-d") {
        $outdir = shift(@ARGV);
        if (!$outdir) { &usage; }
    } elsif ($arg =~ /^-/) {
        &usage;
    } 
}

if (!$username) {
    &usage;
}

$path=":pserver:$username\@$CVSPATH";

if (-d "$outdir/$base") {
    die "Decided not to check out as you already have data in $outdir/$base";
}

chdir $outdir || die "Can't change directory to $outdir";
# print "$CVS -d$path co $base\n";
`$CVS co $main`;
`$CVS co $topics`;
`$CVS co $toolbase`;

$coderdir="$outdir/$topics/$username";
if (!-d "$coderdir") {
    mkdir "$coderdir" || die "Can't create coder directory $coderdir";
    chdir "$outdir/Data" || die "Can't change directory to $outdir/Data";
    `$CVS add $shorttopics/$username`;
    chdir $outdir || die "Can't change directory to $outdir";
}

# edit the metadata

if (!(-f $meta)) {
    print stdout "\nWaiting for metadata.\n";
    $wt=1000000;
    $maxwt=10;
    $curwt=0;
    while (!(-f $meta) && ($curwt<$maxwt)) {
	for ($i=0; $i<$wt; $i++) { }
	$curwt++;
	print ".\n";
    }
}

if (!(-f $meta)) {
    print "ERROR: no metadata file '$meta' - please contact the script author jonathan\@inf.ed.ac.uk quoting this error message\n";
} else {
    open (IN, "$meta") || die "can't open metadata file for read ($meta)";
    $met="";
    while (<IN>) {
	$met.=$_;
	if (/<interaction-codings>/) { $met.=$metafragment; }
    }
    close(IN);
    
    open (OUT, ">$meta") || die "can't open metadata file for write ($meta)";
    print OUT $met;
    close OUT;
}

if (!(-f $topictool)) {
    print "ERROR: no shell script '$topictool' - please contact the script author jonathan\@inf.ed.ac.uk quoting this error message\n";
} else {
# edit the shell script
    open (IN, "$topictool") || die "can't open shell script for read ($topictool)";
    open (OUT, ">$outdir/topic.sh") || die "can't open shell script for read ($outdir/topic.sh)";
    while (<IN>) {
	if (/ICSITopicSegmenter/) { s/-c\s+[^\s]*/-c $meta/; }
	if (/NXT=/) { $_="NXT=\"$NXT\";\n"; }
	print OUT $_;
    }
    close(IN);
    close(OUT);
}

# link to a local copy of the signals directory
#print "$LN $SIGNALS $base/Signals\n";
`$LN -s $SIGNALS $base/Signals`;

# Copy any existing data to the local Main directory
`$CP $coderdir/*.xml $main`;

print "Completed checkout. \nUse 'sh topic.sh' to code and 'checkintopic' to check in changes to CVS.\n";

